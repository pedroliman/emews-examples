
# Generated by stc version 0.9.0
# date                    : 2021/07/09 04:00:00
# Turbine version         : 1.3.0
# Input filename          : /home/parallels/Documents/swift-test/swift-emews-examples/stats.swift
# Output filename         : /home/parallels/Documents/swift-test/swift-emews-examples
# STC home                : /home/parallels/Documents/swift-test/swift-t-1.5.0/stc
# Turbine home            : /home/parallels/Documents/swift-test/swift-t-1.5.0/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : stats.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /home/parallels/Documents/swift-test/swift-t-1.5.0/stc
# stc.turbine.version           : 1.3.0
# stc.turbine_home              : /home/parallels/Documents/swift-test/swift-t-1.5.0/turbine
# stc.version                   : 0.9.0

# Metadata:

package require turbine 1.3.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string[int] u:results stats.swift:10:0
    lassign [ adlb::multicreate [ list container integer string 1 10 1 ] ] u:results
    turbine::c::log "allocated u:results=<${u:results}>"
    turbine::rule [ list ${u:results} ] "join-argwait ${u:results}"
    __entry-range1:outer ${u:results} 0 9 1
}


proc join-argwait { u:results } {
    # Var: $string$[int] v:A RENAMED [$string$[int]:__v:A]
    # Var: $string v:s RENAMED [$string:__v:s]
    # Var: $string v:code:1 VALUE_OF [string:code]
    # Var: $string v:output RENAMED [$string:__v:output]
    set v:A [ turbine::enumerate_rec ${u:results} [ list container string ] 0 1 ]
    set v:s [ turbine::string_join_impl ${v:A} "," ]
    set v:code:1 [ turbine::sprintf_impl "m = mean(c(%s)))" ${v:s} ]
    set v:output [ r::eval 1 ${v:code:1} "toString(m)" ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-call_foreign-printf ${v:output} ]
    turbine::reset_priority
}


proc __entry-call_foreign-printf { v:output } {
    # Var: $void v:t:12 VALUE_OF [void:__t:12]
    set v:t:12 [ turbine::printf_local ${v:output} ]
}


proc __entry-range1:outer { u:results tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-range1:inner ${u:results} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "__entry-range1:outer ${u:results} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-range1:inner { u:results tcltmp:lo tcltmp:hi tcltmp:inc } {
    for { set v:i1 ${tcltmp:lo} } { ${v:i1} <= ${tcltmp:hi} } { incr v:i1 ${tcltmp:inc} } {
        # Var: file u:f stats.swift:__entry():12:4
        # Var: $string v:t:3:1 VALUE_OF [string:__t:3:1]
        # Var: $string optf:o RENAMED [$string:__of:o]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 2 ] ] [ list 0 ] ] u:f
        set v:t:3:1 [ turbine::sprintf_impl "RANDOM=%i; echo \$RANDOM" ${v:i1} ]
        set optf:o [ turbine::mktemp_impl ]
        turbine::set_filename_val ${u:f} ${optf:o}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 [ list simulation-app-leaf1 ${optf:o} ${v:i1} ${v:t:3:1} ${u:f} ${u:results} ]
        turbine::reset_priority
    }
}


proc simulation-app-leaf1 { optf:o v:i1 v:t:3:1 u:f u:results } {
    # Var: $file v:o RENAMED [$file:__v:o] stats.swift:simulation():7:12
    set tcltmp:init_rc 1
    set v:o [ turbine::create_local_file_ref ${optf:o} ${tcltmp:init_rc} 0 ]
    turbine::c::log [ list exec: "bash" "-c" ${v:t:3:1} [ dict create "stdout" ${optf:o} ] ]
    turbine::exec_external "bash" [ dict create "stdout" ${optf:o} ] "-c" ${v:t:3:1}
    turbine::store_file ${u:f} v:o 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "__entry-call_foreign-read ${v:i1} {${u:f}} ${u:results}"
    turbine::reset_priority
    turbine::decr_local_file_refcount v:o
}


proc __entry-call_foreign-read { v:i1 u:f u:results } {
    # Var: $file v:f VALUE_OF [file:f]
    # Var: $string v:t:8 VALUE_OF [string:__t:8]
    set v:f [ turbine::retrieve_file ${u:f} CACHED 1 ]
    set v:t:8 [ turbine::file_read_local ${v:f} ]
    turbine::container_insert ${u:results} ${v:i1} ${v:t:8} string 1
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "results" "stats:10:0"
adlb::add_debug_symbol 2 "f" "stats:__entry():12:4"
turbine::start swift:main swift:constants
turbine::finalize
